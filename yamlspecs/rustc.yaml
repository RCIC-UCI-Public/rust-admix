!include rcic-package.yaml
!include rpm.yaml
---
- package: rustc 
  name: rustc
  versions: !include versions.yaml
  version: "{{versions.rustc}}" 
  dirname: "{{name}}-{{version}}-src"
  src_tarball: "{{dirname}}.{{extension}}"
  src_dir: "{{dirname}}"

  addfile: 
    - mylink
    - "filter-requires-{{name}}.sh"

  compiler: "{{versions.compiler.name}}"
  compiler_version: "{{versions.compiler.version}}"
  vendor_source: https://static.rust-lang.org/dist/{{dirname}}.{{extension}}
  description: |
    Rust Compiler version {{ version }}. Rust is a multi-paradigm programming language focused 
    on performance and safety, especially safe concurrency. Rust is syntactically similar 
    to C++, and provides memory safety without using garbage collection.  

  build:
    configure: ./configure
    configure_args: 
      --prefix={{root}} 
      --set='rust.channel=stable'
      --llvm-root=$$llvm__PREFIX
    modules:
      - foundation 
      - "{{compiler}}/{{compiler_version}}"
      - llvm/{{versions.llvm}}

    ## Need to wrap ld to include LDFLAGS from the {{ compiler }}, 
    ## but don't want this to show up in RPM description 
    pkgmake: >
      {{build.configure}} {{build.configure_args}}  
      --set=target.x86_64-unknown-linux-gnu.linker=$$(pwd)/../mylink;
      python x.py build

  install:
    ## Rust build doesn't appear to support DEST, so need to do a bind mount
    makeinstall: >
      if [ ! -d {{root}} ]; then mkdir -p {{root}}; DIRCREATED=1; fi;
      mount --bind $(ROOT)/{{root}} {{root}};
      python x.py install cargo;
      python x.py install;
      umount {{root}};
      if [ "$$DIRCREATED" == "1" ]; then rmdir {{root}}; fi 
    installextra: $(INSTALL) -m 644  COPYRIGHT* README* LICENSE* $(ROOT)/{{ root }}

  requires:
      - "{{compiler}}_{{compiler_version}}"
      - llvm_{{versions.llvm}}
  rpmFilters: *filterRequires
